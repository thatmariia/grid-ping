:py:mod:`misc`
==============

.. py:module:: misc


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   misc.neur_slice
   misc.euclidian_dist_R2
   misc.cust_range
   misc.crange
   misc.orange



.. py:function:: neur_slice(neuron_type)

   The setup: we put excitatory neurons in lists before inhibitory. This function returns relevant slices.

   :param neuron_type: the type of neuron we need indices for.
   :type neuron_type: NeuronTypes

   :return: a slice for the neurons of given type.
   :rtype: slice


.. py:function:: euclidian_dist_R2(p1, p2)

   Calculates the Eaclidian distance between two 2D points.

   :param p1: coordinates of point 1.
   :neuron_type p1: tuple[float]

   :param p2: coordinates of point 2.
   :neuron_type p2: tuple[float]

   :return: the Eaclidian distance between two 2D points.
   :rtype: float


.. py:function:: cust_range(*args, rtol=1e-05, atol=1e-08, include=[True, False])

   Combines numpy.arange and numpy.isclose to mimic
   open, half-open and closed intervals.
   Avoids also floating point rounding errors as with
   >>> numpy.arange(1, 1.3, 0.1)
   array([1. , 1.1, 1.2, 1.3])

   args: [start, ]stop, [step, ]
       as in numpy.arange
   rtol, atol: floats
       floating point tolerance as in numpy.isclose
   include: boolean list-like, length 2
       if start and end point are included


.. py:function:: crange(*args, **kwargs)


.. py:function:: orange(*args, **kwargs)


