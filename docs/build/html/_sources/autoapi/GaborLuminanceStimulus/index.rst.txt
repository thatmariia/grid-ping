:py:mod:`GaborLuminanceStimulus`
================================

.. py:module:: GaborLuminanceStimulus


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   GaborLuminanceStimulus.GaborLuminanceStimulus




.. py:class:: GaborLuminanceStimulus(atopix: float, stimulus: numpy.ndarray[(int, int), float], stimulus_center: tuple[float, float], stimulus_patch: numpy.ndarray[(int, int), float], patch_start: tuple[int, int])

   This class contains information about the full stimulus and a patch.

   :param atopix: conversion coefficient between pixels and visual degrees.
   :type atopix: float

   :param stimulus: luminance matrix of the stimulus.
   :type stimulus: numpy.ndarray[(int, int), float]

   :param stimulus_center: the center of the full stimulus.
   :type stimulus_center: tuple[float, float]

   :param stimulus_patch: the luminance matrix of a patch of the stimulus.
   :type stimulus_patch: numpy.ndarray[(int, int), float]

   :param patch_start: top left coordinate of the patch.
   :type patch_start: tuple[int, int]


   :ivar atopix: conversion coefficient between pixels and visual degrees.
   :ivar stimulus: luminance matrix of the stimulus.
   :ivar stimulus_center: the center of the full stimulus.
   :ivar stimulus_patch: the luminance matrix of a patch of the stimulus.
   :ivar patch_start: top left coordinate of the patch.

   .. py:method:: plot_stimulus(self, filename: str) -> None


   .. py:method:: plot_patch(self, filename: str) -> None


   .. py:method:: _plot(self, stimulus: numpy.ndarray[(int, int), float], filename: str) -> None

      Plots the binary heatmap of a given stimulus.

      :param filename: name of the file for the plot (excluding extension).
      :type filename: str

      :param stimulus: a luminance matrix to plot.
      :type stimulus: numpy.ndarray[(int, int), float]

      :rtype: None



